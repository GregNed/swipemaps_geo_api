stages:
  # - test
  - build

default:
  image: docker:20.10.6
  before_script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY

# test:
#   stage: test
#   script:
#     - pip install -r requirements.txt
#     - python manage.py runserver 0.0.0.0:8000 
#     - python tests/test.py

build:
  stage: build
  # services:
  #   - docker:20.10.6-dind
  script:
    - docker pull "$CI_REGISTRY_IMAGE" || true
    - > 
      docker build
      --pull
      --build-arg VCS_REF="$CI_COMMIT_SHA"
      --build-arg VCS_URL="$CI_PROJECT_URL"
      --cache-from "$CI_REGISTRY_IMAGE"
      --tag "${CI_REGISTRY_IMAGE}:${TAG}" .
    - docker push "${CI_REGISTRY_IMAGE}:${TAG}"
  rules:
    - if: "$CI_COMMIT_TAG"
      variables:
        TAG: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
      variables:
        TAG: "$CI_COMMIT_SHA"
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      variables:
        TAG: "latest"
